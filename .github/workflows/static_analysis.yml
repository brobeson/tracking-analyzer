name: Static Analysis

on:
  workflow_dispatch:
  push:
  pull_request:
    branches: [ main ]

env:
  SOURCE_DIRECTORY: source
  BUILD_DIRECTORY: build

jobs:
  Static_Analysis:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        path: ${{env.SOURCE_DIRECTORY}}
    - name: Install Tools
      run: |
        sudo apt install clang-tidy-12 cppcheck
        pip install lizard
    - name: Install Qt5
      uses: jurplel/install-qt-action@v2
      with:
        modules: qtcharts
        setup-python: false
    - name: Configure the Project
      run: cmake -S ${SOURCE_DIRECTORY} -B ${BUILD_DIRECTORY} -D CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=on
    - name: Code Format
      if: always()  # Run this step, even if previous steps fail.
      uses: jidicula/clang-format-action@v3.4.0
      with:
        clang-format-version: 10
        check-path: ${{env.SOURCE_DIRECTORY}}
    - name: Complexity Analysis
      if: always()  # Run this step, even if previous steps fail.
      run: >
        lizard
        --CCN 10
        --length 40
        --arguments 6
        --warnings_only
        --working_threads $(nproc)
        --modified
        ${SOURCE_DIRECTORY}
    - name: Cppcheck
      if: always()  # Run this step, even if previous steps fail.
      run: >
        cppcheck
        --enable=all
        --error-exitcode=2
        --project=${BUILD_DIRECTORY}/compile_commands.json
        --quiet
        ${SOURCE_DIRECTORY}
    - name: Clang Tidy
      if: always()  # Run this step, even if previous steps fail.
      run: clang-tidy-12 -p ${BUILD_DIRECTORY} --quiet ${SOURCE_DIRECTORY}/**/*.cpp
    - name: Check Markdown
      if: always()  # Run this step, even if previous steps fail.
      uses: articulate/actions-markdownlint@v1
